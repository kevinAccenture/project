<project name="simulator" default="main" basedir=".">
    <description>
        stack build file
    </description>
    <!-- set global properties for this build -->
    <property file="build.properties"/>
    <property name="src.dir" value="src"/>
    <property name="doc.dir" value="documentation"/>
    <property name="build.dir" value="build"/>
    <property name="web.dir" value="${build.dir}/web"/>
    <property name="classes.dir" value="${build.dir}/classes"/>
    <property name="jar.dir" value="${build.dir}/jar"/>
    <property name="test.dir" value="${build.dir}/test"/>
    <property name="main-class" value="simulator.Simulator"/>
    <property name="test-class" value="simulator.TestRunner"/>
    <property name="deploy.dir" value="${build.dir}/simulatorApp"/>

    <property name="url" value="http://localhost:8080/manager/text"/>
    <property name="username" value="tomcat"/>
    <property name="password" value="tomcat"/>

    <!-- THIS target IS THE FIRST THING THAT IS RAN, IT CLEANS AND DELETE THE DIR MENTION BELOW TO ALLOW CLEAN BUILD -->
    <target name="clean">
        <delete dir="${build.dir}"/>
        <delete dir="documentation"/>
        <delete dir="${deploy.dir}"/>
        <delete file="simulator.war"/>
        <delete dir="${src.dir}/main/java/simulator/simulator"/>
    </target>

    <!-- THIS target IS USED TO MAKING DIRECTORY IN WHICH OUT JAR AND CLASSES ARE STORED IN   -->
    <target name="init" depends="clean">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${doc.dir}"/>
        <mkdir dir="${deploy.dir}"/>
    </target>

    <!-- THIS  target IS USED TO INCLUDE THE JAR FILES NEEDED FOR TEH JUNIT AND OTHER PATH FOR OTHER targets   -->
    <path id="classpath">
        <path location="lib">
            <fileset dir="lib/jar_files" includes="*.jar" />
        </path>
        <path >
            <pathelement location = "lib/jar_files/junit-jupiter-api-5.7.1.jar" />
            <pathelement location = "${src.dir}" />
        </path>
        <path location="${classes.dir}"/>
    </path>

    <!-- Configure the folder and context path for this application -->
    <taskdef resource="org/apache/catalina/ant/catalina.tasks"
             classpathref="classpath"/>

    <!--THIS target IS USED FOR COMPILING CLASSES AND STORING THEM IN THE DIR CLASS ONLY IF init target is SUCCESSFUL-->
    <target name="compile" depends="init"
            description="compile the source">
        <!-- Compile the Java code from ${src dir} into ${classes dir} -->
        <mkdir dir="${classes.dir}"/>
        <javac classpathref="classpath" includeantruntime="false" srcdir="${src.dir}" destdir="${classes.dir}"/>
    </target>

    <!-- THIS target IS USED FOR GENERATING JAVA DOC  -->
    <target name="doc" >
        <javadoc classpathref="classpath" sourcepath="${src.dir}" destdir="${doc.dir}">
            <fileset dir="."/>
        </javadoc>
    </target>

    <!-- THIS target IS USED CREATING THE JAR FILES AND IT EXECUTES THE MAIN CLASS IN THE MANIFEST IF compiled-->
    <target name="jar" depends="compile"
            description="generate the jar file">
        <!-- Create the distribution directory -->
        <mkdir dir="${jar.dir}"/>
        <!-- Putting everything in ${build} into the MyProject-${DSTAMP}.jar file -->
        <jar destfile="${jar.dir}/${ant.project.name}.jar" basedir="${classes.dir}">
            <manifest>
                <attribute name="Main-Class" value="${main-class}" />
                <attribute name="Test-Class" value="${test-class}" />
            </manifest>
        </jar>
    </target>


    <!--THIS target RUNS AND EXECUTE THE JAR FILE-->
    <target name="run" depends="jar" >
        <java jar="${jar.dir}/${ant.project.name}.jar" fork="true"/>
    </target>

    <!-- THIS target IS USED FOR CLEAN BUILDING AND IT DEPENDS ON THE BELOW  -->
    <target name="clean-build" depends="clean,jar"/>


    <!-- THIS IS THE JUNIT target, IT RUNS THE UNIT TEST -->
    <target name = "test" >
         <java classpathref="classpath" classname="${test-class}" fork="true"/>
    </target>

    <target name="deploywar" depends="compile" description="Deploy application as a WAR file">
       <war warfile="${deploy.dir}/simulator.war" needxmlfile="false">
           <fileset dir="${src.dir}"/>
       </war>
     </target>


    <!-- THIS target IS THE DEFAULT TARGET RAN WHEN EXECUTED IN THE ANT WITHOUT A TARGET   -->
    <target name="main" depends="run, test, doc, deploywar" />
        
</project>